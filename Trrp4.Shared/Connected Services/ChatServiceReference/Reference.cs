//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Trrp4.Shared.ChatServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Message", Namespace="http://schemas.datacontract.org/2004/07/Trrp4.Objects")]
    [System.SerializableAttribute()]
    public partial class Message : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AddresseeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDeliveredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Addressee {
            get {
                return this.AddresseeField;
            }
            set {
                if ((this.AddresseeField.Equals(value) != true)) {
                    this.AddresseeField = value;
                    this.RaisePropertyChanged("Addressee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDelivered {
            get {
                return this.IsDeliveredField;
            }
            set {
                if ((this.IsDeliveredField.Equals(value) != true)) {
                    this.IsDeliveredField = value;
                    this.RaisePropertyChanged("IsDelivered");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Sender {
            get {
                return this.SenderField;
            }
            set {
                if ((this.SenderField.Equals(value) != true)) {
                    this.SenderField = value;
                    this.RaisePropertyChanged("Sender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccessKey", Namespace="http://schemas.datacontract.org/2004/07/Trrp4.Objects")]
    [System.SerializableAttribute()]
    public partial class AccessKey : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ExpiresField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid KeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Expires {
            get {
                return this.ExpiresField;
            }
            set {
                if ((this.ExpiresField.Equals(value) != true)) {
                    this.ExpiresField = value;
                    this.RaisePropertyChanged("Expires");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Key {
            get {
                return this.KeyField;
            }
            set {
                if ((this.KeyField.Equals(value) != true)) {
                    this.KeyField = value;
                    this.RaisePropertyChanged("Key");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ChatServiceReference.IChatService")]
    public interface IChatService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatService/RedirectMessage", ReplyAction="http://tempuri.org/IChatService/RedirectMessageResponse")]
        void RedirectMessage(Trrp4.Shared.ChatServiceReference.Message message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatService/RedirectMessage", ReplyAction="http://tempuri.org/IChatService/RedirectMessageResponse")]
        System.Threading.Tasks.Task RedirectMessageAsync(Trrp4.Shared.ChatServiceReference.Message message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatService/AddAccessKey", ReplyAction="http://tempuri.org/IChatService/AddAccessKeyResponse")]
        void AddAccessKey(Trrp4.Shared.ChatServiceReference.AccessKey accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatService/AddAccessKey", ReplyAction="http://tempuri.org/IChatService/AddAccessKeyResponse")]
        System.Threading.Tasks.Task AddAccessKeyAsync(Trrp4.Shared.ChatServiceReference.AccessKey accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatService/RevokeAccessKey", ReplyAction="http://tempuri.org/IChatService/RevokeAccessKeyResponse")]
        void RevokeAccessKey(Trrp4.Shared.ChatServiceReference.AccessKey accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatService/RevokeAccessKey", ReplyAction="http://tempuri.org/IChatService/RevokeAccessKeyResponse")]
        System.Threading.Tasks.Task RevokeAccessKeyAsync(Trrp4.Shared.ChatServiceReference.AccessKey accessKey);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IChatServiceChannel : Trrp4.Shared.ChatServiceReference.IChatService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ChatServiceClient : System.ServiceModel.ClientBase<Trrp4.Shared.ChatServiceReference.IChatService>, Trrp4.Shared.ChatServiceReference.IChatService {
        
        public ChatServiceClient() {
        }
        
        public ChatServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ChatServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ChatServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ChatServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void RedirectMessage(Trrp4.Shared.ChatServiceReference.Message message) {
            base.Channel.RedirectMessage(message);
        }
        
        public System.Threading.Tasks.Task RedirectMessageAsync(Trrp4.Shared.ChatServiceReference.Message message) {
            return base.Channel.RedirectMessageAsync(message);
        }
        
        public void AddAccessKey(Trrp4.Shared.ChatServiceReference.AccessKey accessKey) {
            base.Channel.AddAccessKey(accessKey);
        }
        
        public System.Threading.Tasks.Task AddAccessKeyAsync(Trrp4.Shared.ChatServiceReference.AccessKey accessKey) {
            return base.Channel.AddAccessKeyAsync(accessKey);
        }
        
        public void RevokeAccessKey(Trrp4.Shared.ChatServiceReference.AccessKey accessKey) {
            base.Channel.RevokeAccessKey(accessKey);
        }
        
        public System.Threading.Tasks.Task RevokeAccessKeyAsync(Trrp4.Shared.ChatServiceReference.AccessKey accessKey) {
            return base.Channel.RevokeAccessKeyAsync(accessKey);
        }
    }
}
